alias vi="nvim"
alias ll="ls -alh"
alias rm="rm -i"
alias mv="mv -i"
alias cp="cp -i"
if [[ "$(ls --version >/dev/null 2>&1 && echo '1' || echo '0')" == "1" ]]; then
    if [[ "$(ls --group-directories-first /tmp >/dev/null 2>&1 && echo '1' || echo '0')" == "1" ]]; then
        alias ll="ls -alh --color=auto --group-directories-first "
    else
        alias ll="ls -alh --color=auto "
    fi
else
    alias ll="ls -alhG "
fi
NICECMD="nice"
if [ "$(which ionice 2>/dev/null)" != "" ]; then
    NICECMD="ionice -c 3 $NICECMD"
fi
alias nn="$NICECMD "
NACKIGNORES=" --ignore-file=ext:svg --ignore-file=ext:jpg --ignore-file=ext:png --ignore-file=ext:gif --ignore-file=ext:pdf --ignore-file=ext:avi --ignore-file=ext:mp4 --ignore-file=match:/[.-]min[.]js --ignore-file=match:[.-]min[.]css --ignore-dir=.git --ignore-dir=.svn --ignore-dir=cache --ignore-dir=tmp "
if [ "$(which ack-grep 2>/dev/null)" != "" ]; then
    alias ack="ack-grep"
    alias nack="$NICECMD ack-grep $NACKIGNORES --ignore-file=ext:sql "
    alias nacksql="$NICECMD ack-grep $NACKIGNORES "
else
    alias nack="$NICECMD ack $NACKIGNORES --ignore-file=ext:sql "
    alias nacksql="$NICECMD ack $NACKIGNORES "
fi
alias ag="ag -Us --ignore='*.min.js' --ignore='*.min.css' --ignore='/cache/' --ignore='/tmp/' "
alias grep="grep --color"
if [ "$(which wp-cli 2>/dev/null)" != "" ]; then
    alias wp="wp-cli"
fi
alias curdate='date +%Y%m%d%H%M%S'
alias mysql="mysql --show-warnings --auto-rehash "
alias generate_password="openssl rand -base64 37 | cut -c1-16"
alias generate_strong_password="head -n 999 /dev/urandom | grep -ao '[[:graph:]]' | tr -d '\n' | grep -o '^.\{32\}' | head -n 1"
alias find_latin1_files="find . -type f \( -iname '*.php' -or -iname '*.php3' -or -iname '*.php4' -or -iname '*.php5' -or -iname '*.html' -or -iname '*.shtml' -or -iname '*.htm' -or -iname '*.html' -or -iname '*.inc' -or -iname '*.ini' -or -iname '*.tpl' -or -iname '*.css' -or -iname '*.js' \) -exec bash -c \"file --mime-encoding {} | grep ': iso-8859-1$' | sed 's/: iso-8859-1$//g'\" \;"
alias find_latin1_files_php="find . -type f -iname '*.php' -exec bash -c \"file --mime-encoding {} | grep ': iso-8859-1$' | sed 's/: iso-8859-1$//g'\" \;"
alias find_latin1_files_html="find . -type f -iname '*.html' -exec bash -c \"file --mime-encoding {} | grep ': iso-8859-1$' | sed 's/: iso-8859-1$//g'\" \;"
alias convert_latin1_files_to_utf8="vim \"+set nomore\" \"+bufdo set fileencoding=utf8 | w\" \"+q\" \$(find_latin1_files)"
alias convert_latin1_files_to_utf8_php="vim \"+set nomore\" \"+bufdo set fileencoding=utf8 | w\" \"+q\" \$(find_latin1_files_php)"
alias convert_latin1_files_to_utf8_html="vim \"+set nomore\" \"+bufdo set fileencoding=utf8 | w\" \"+q\" \$(find_latin1_files_html)"
function monip() { echo "# Private"; ALLIPS="$([ -x /bin/ip ] && ip a || /sbin/ifconfig -a)"; echo "$ALLIPS" | grep 'inet ' | grep -v '127.0.0.1' | awk '{print $2}' | sed 's/\/[0-9]*//g' | sort | uniq; echo; echo "# Public"; dig +short myip.opendns.com @208.67.220.220; } # AKA @resolver1.opendns.com
function mesip() { ALLIPS="$([ -x /bin/ip ] && ip a || /sbin/ifconfig -a)"; echo "$ALLIPS" | grep 'inet ' | grep -v '127.0.0.1' | awk '{print $2}' | sed 's/.*://g' | sed 's/\/[0-9]*//g' | sort | uniq | tr "\\n" " " | sed 's/ $//g' | sed 's/ /\\\|/g'; }
function follow_http() { wget --no-check-certificate -O /dev/null -S "$1" 2>&1 | grep 'HTTP/\|Location'; }
function highlight () {
    local GREP="grep"
    local GGREP="$(which ggrep 2>/dev/null)"
    if [ -x "$GGREP" ];
    then
        GREP="$GGREP"
    fi
    $GREP --color "\($1\)\|$" $2
}
function dirdiff() {
    if [ "$1" == "" ] || [ "$2" == "" ] || [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
        echo
        echo -e "\033${TERM_COLOR_LIGHT_RED}Usage: $FUNCNAME directory1 directory2 ["override diff command"]\033${TERM_COLOR_NORMAL}"
        echo
            cat <<EOF
List differences between directories DIRECTORY1 and DIRECTORY2

Options: you can override the default diff command used by providing an alternative diff command enclosed with quotes

Example: $FUNCNAME directory1 directory2 "nice diff -rwq --exclude=.git --exclude=*.jpg"
EOF
        return 1
    fi
    local VIMDIFF="nvim -d";
    local DIFFCMD="${3:- diff -rwq --exclude=.svn --exclude=.git }"
    LANG=C LANGUAGE=C LC_ALL=C $DIFFCMD "$1" "$2" | sed "s/^Files /$VIMDIFF \"/g" | sed 's/ and /" "/g' | sed 's/ differ/"/g';
}
function cGET() { curl -s -S -L -k "$1"; }
function cHEAD() { curl -s -S -L -I -k "$1"; }
function cTIME()  { bash -c "time curl -s -S -k '$1' -o /dev/null" 2>&1 | grep real; }
function cTIME2()  { bash -c "time curl -s -S -k --http2 '$1' -o /dev/null" 2>&1 | grep real; }
# filter domain from url
function detail() {
    case "$1" in
        -h|--help)
            echo
            echo -e "\033${TERM_COLOR_LIGHT_RED}Usage: $FUNCNAME [logfile [logfile]]\033${TERM_COLOR_NORMAL}"
            echo
                cat <<EOF
    tail -F [logfile] with colored output
EOF
            return 1
            ;;
    esac
    # OSX portability: use GNU sed
    local SED="sed"
    local GSED="$(which gsed 2>/dev/null)"
    if [ -x "$GSED" ];
    then
        SED="$GSED"
    fi
    local LOGFILE="$@"
    if [ "$LOGFILE" == "" ]; then
        LOGFILE="$HOME/log/error.log"
    fi
    tail -F $LOGFILE | $SED -u "s/\\\n/\n/g" | $SED -u "s/\\\x1b\[/\x1b\[/g"
}


########################
# ALIAS et fonctions GIT
########################
alias vimdiff='nvim -d'
alias shorttags="find -type f -name '*.php' -exec grep -IlP '<\?(?!(php|xml|mso|=))' {} +"
alias gettags="ctags -R"
echo 'eval $(thefuck --alias)' >> ~/.bashrc
eval $(thefuck --alias)
