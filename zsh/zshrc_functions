#!/bin/sh

########
# COLORS
########
NORMAL="\033[0m"
RED="\033[0;31m"
GREEN="\033[0;32m"
BROWN="\033[0;33m"
BLUE="\033[0;34m"
CYAN="\033[0;36m"
YELLOW="\033[0;33m"
LIGHT_RED="\033[1;31m"
LIGHT_GREEN="\033[1;32m"
LIGHT_BLUE="\033[1;34m"
LIGHT_YELLOW="\033[1;33m"
WHITE="\033[1;37m"
BLACK="\033[0;30m"
MAGENTA="\033[1;35m"
LIGHT_CYAN="\033[1;36m"
LIGHT_GRAY="\033[0;37m"
GRAY="\033[01;30m"
BOLD="\033[1m"
UNDERSCORE="\033[4m"
REVERSE="\033[7m"

function extract()  	# Handy Extract Program
{
	if [ -f $1 ] ; then
    	case $1 in
        	*.tar.bz2)   tar xvjf $1 	;;
        	*.tar.gz)	tar xvzf $1 	;;
        	*.bz2)   	bunzip2 $1  	;;
        	*.rar)   	unrar x $1  	;;
        	*.gz)    	gunzip $1   	;;
        	*.tar)   	tar xvf $1  	;;
        	*.tbz2)  	tar xvjf $1 	;;
        	*.tgz)   	tar xvzf $1 	;;
        	*.zip)   	unzip $1    	;;
        	*.Z)     	uncompress $1   ;;
        	*.7z)    	7z x $1     	;;
        	*)       	echo "'$1' cannot be extracted via >extract<" ;;
    	esac
	else
    	echo "'$1' is not a valid file!"
	fi
}

# Creates an archive (*.tar.gz) from given directory.
function maketar() { tar cvzf "${1%%/}.tar.gz"  "${1%%/}/"; }

# Creates an archive (*.gz) from given directory.
function makegzip() { gzip -9 "${1%%/}"  "${1%%/}/"; }

# Create a ZIP archive of a file or folder.
function makezip() { zip -r "${1%%/}.zip" "$1" ; }

function screen_()
{
    if [ -z $1 -o $1 -eq 0 ]; then
        echo "Spécifiez un entier entre 1 et 100"
    else
        if [ $1 -gt 0 -a $1 -le 100 ]; then
            #calcul=$(($1 / 100 | bc ))
            calcul=$(( $1/100. ))
            xrandr --output eDP-1 --brightness $calcul
            xrandr --output HDMI-2 --brightness $calcul
        else
            echo "Spécifiez un entier entre 1 et 100"
        fi
    fi
}

function screenp()
{
    if [ -z $1 -o $1 -eq 0 ]; then
        echo "Spécifiez un entier entre 1 et 100"
    else
        if [ $1 -gt 0 -a $1 -le 100 ]; then
            #calcul=$(($1 / 100 | bc ))
            calcul=$(( $1/100. ))
            primary=`xrandr | grep -e " primary [^(]" | sed -e "s/\([A-Z0-9]\+\) connected.*/\1/"`
            xrandr --output ${primary} --brightness $calcul
        else
            echo "Spécifiez un entier entre 1 et 100"
        fi
    fi
}

function screenchoose()
{
    if [ -z $1 -o $1 -eq 0 ]; then
        echo "Spécifiez un entier entre 1 et 100"
    else
        if [ $1 -gt 0 -a $1 -le 100 ]; then
            #calcul=$(($1 / 100 | bc ))
            calcul=$(( $1/100. ))
            templist=( $(xrandr | grep -e " connected [^(]" | sed -e "s/\([A-Z0-9]\+\) connected.*/\1/") )
            primary=`xrandr | grep -e " primary [^(]" | sed -e "s/\([A-Z0-9]\+\) connected.*/\1/"`
            echo -e "${YELLOW}Which screen to update?${NORMAL}"
            echo '0: all'
            i=1
            for fn in $templist; do
                screen="$i: $fn"
                if [ "$fn" = "$primary" ]; then
                    screen="${screen} (${GREEN}primary${NORMAL})"
                fi
                echo "$screen"
                ((i=i + 1))
            done
            read -n
            screen_chosen=$REPLY
            if [ "$screen_chosen" -eq 0 ]; then
                for fn in $templist; do
                    xrandr --output ${fn} --brightness $calcul
                done
            else
                xrandr --output $templist[$screen_chosen] --brightness $calcul
            fi
        else
            echo "Spécifiez un entier entre 1 et 100"
        fi
    fi
}

function dockercomposename ()
{
    echo $(docker inspect -f '{{.Name}}' $(docker-compose ps -q) | cut -c2-)
}

function dockercomposessh()
{
    docker exec -it $(docker inspect -f '{{.Name}}' $(docker-compose ps -q) | cut -c2-) /bin/bash
}

function myaliases ()
{
    if [ -z $1 ]; then
        alias
    else
    	case $1 in
        	help) ls -A1 ~/.dotfiles/zsh/zshrc_aliases_* ;;
        	*) 
                FILE=~/.dotfiles/zsh/zshrc_aliases_$1
                if [ -f "$FILE" ]; then
                    grep 'alias ' $FILE
                else
                    ls -A1 ~/.dotfiles/zsh/zshrc_aliases_*
                fi ;;
    	esac
    fi
    
}
